# Alias of the project, must exist in the database already
project_alias = ""


# Path where the folders are stored
project_datastorage = ""


# Are md5 files required to check the files in a folder?
md5_required = True
md5_file = ".md5"


# Temp folder, usually /tmp
# No trailing slash
tmp_folder = "/tmp"


# File types
main_files = ".tif"
raw_files = ".eip"
data_files = None


# API location
api_url = ""
api_key = ""


# How many parallel processes to run 
no_workers = 2


# How to split to parse the date, return the date in format 'YYYY-MM-DD'
def folder_date(folder_name):
    # Example as PREFIX-YYYYMMDD
    folder_date = folder_name.split('PREFIX-')[1]
    formatted_date = "{}-{}-{}".format(folder_date[0:4], folder_date[4:6], folder_date[6:8])
    return formatted_date


# Validate sequences
sequence_split = "_"
sequence = []


# Should the names match a db?
files_db = False
# How to find the list of valid names
# this has to be a valid query that will 
# be used in a subquery
filename_pattern_query = "SELECT COUNT(*) as no_records FROM (SELECT file_name FROM filename_table WHERE project_id = 100 AND file_name = '{}') a"


# How long to sleep between loops
# Set to False to run only once
sleep = 180


# Path for programs in the system
jhove = "jhove"
exiftool = "exiftool"
magick = "identify"


# Path of where to save the JPG previews and size
jpg_previews = ""
# How much space to leave free, in decimal (0.1 is 10%).
#  If the free space left is less than this, the script will stop.
jpg_previews_free = 0.1


# Limit the no of cores for Imagemagick
magick_limit = 4


# Are previews in the same server?
previews = True


run_once = True


# Files must contain one of these strings to check with tesseract
tesseract_pattern = ["label"]
